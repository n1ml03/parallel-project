import numpy as np


def D(x):
    '''
    ========================================================================
    Calculate the 2D gradient (finite difference) of an input image.
    Input:      - x     : 2D image.
    
    Output:     - w     : The gradient (3D array).
    ========================================================================
    '''
    arr = np.array(x)


    n1, n2 = arr.shape
    w = np.zeros((n1, n2, 2), dtype=arr.dtype)

    w[:, :, 0] = x - np.roll(x, shift=(-1, 0), axis=(0, 1))
    w[-1, :, 0] = 0

    w[:, :, 1] = x - np.roll(x, shift=(0, -1), axis=(0, 1))
    w[:, -1, 1] = 0
    
    return w

'''
data = [
    [-0.1993 - 0.1069j, 0.2086 + 0.1119j, -0.2301 - 0.1053j, 0.2621 + 0.0863j, -0.3008 - 0.0524j],
    [0.1591 + 0.1649j, -0.1190 - 0.1023j, 0.0835 + 0.0387j, -0.0455 + 0.0183j, 0.0008 - 0.0598j],
    [-0.1354 - 0.2339j, 0.0375 + 0.1128j, 0.0613 - 0.0018j, -0.1722 - 0.0829j, 0.2982 + 0.1216j],
    [0.1389 + 0.3152j, 0.0302 - 0.1537j, -0.2022 + 0.0137j, 0.3898 + 0.0792j, -0.5924 - 0.0952j],
    [-0.1831 - 0.4035j, -0.0707 + 0.2313j, 0.3242 - 0.0915j, -0.5882 + 0.0197j, 0.8546 - 0.0536j]
]

print(D(data))
'''